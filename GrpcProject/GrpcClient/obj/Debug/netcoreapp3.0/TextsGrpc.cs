// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/texts.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcServer {
  public static partial class Text
  {
    static readonly string __ServiceName = "Text";

    static readonly grpc::Marshaller<global::GrpcServer.TextId> __Marshaller_TextId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.TextId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.TextModel> __Marshaller_TextModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.TextModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.EmptyRequest> __Marshaller_EmptyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.EmptyRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcServer.TextId, global::GrpcServer.TextModel> __Method_GetText = new grpc::Method<global::GrpcServer.TextId, global::GrpcServer.TextModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetText",
        __Marshaller_TextId,
        __Marshaller_TextModel);

    static readonly grpc::Method<global::GrpcServer.EmptyRequest, global::GrpcServer.TextModel> __Method_GetAllTexts = new grpc::Method<global::GrpcServer.EmptyRequest, global::GrpcServer.TextModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllTexts",
        __Marshaller_EmptyRequest,
        __Marshaller_TextModel);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcServer.TextsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Text</summary>
    public partial class TextClient : grpc::ClientBase<TextClient>
    {
      /// <summary>Creates a new client for Text</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public TextClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Text that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public TextClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected TextClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected TextClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcServer.TextModel GetText(global::GrpcServer.TextId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcServer.TextModel GetText(global::GrpcServer.TextId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetText, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.TextModel> GetTextAsync(global::GrpcServer.TextId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.TextModel> GetTextAsync(global::GrpcServer.TextId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetText, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::GrpcServer.TextModel> GetAllTexts(global::GrpcServer.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllTexts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::GrpcServer.TextModel> GetAllTexts(global::GrpcServer.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllTexts, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override TextClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TextClient(configuration);
      }
    }

  }
}
#endregion
